JDK8共424个Deprecated api，其中243个在文档中提供了replaced api，占比57.3%，181个文档中未提供replaced api，占比42.7%。

class1:replaced api调用deprecated api，参数一致。
猜想：变更方法名
18,26,315,316,317,318,319,320,321,322,323,324,325,326,328,335,336,338,339,340,341,342,346,347,348,349,350,351,352,353,355,358,362,
365,367,368,369,370,371,372,373,374,375,376,377,378,393,394,395,396,397,398,399,403,404,406,407,411,412,413,414,415,417,419,420,421,422

class2:deprecated api调用replaced api，参数一致
1,10,20,27,28,47,50,51,52,80,86(虽然不是直接调用，但是做了重复工作),104,105,106,107,173,174,312,357,408

class3:代码中看不出什么关联
4,5,6,12,21,29#,45,175,181,182,187,188,189,190,191,192,193,194,195,196,197,198,211,251,284,287,290,291,302,303,332,344,345,379,380,381,382,383,384,385,386,387,388,
389,391,392,416

class3.1:看不出关联但是语义相同，用了另一套机制实现，例如Date，Calendar
269,270,271,272,273,274,275,276,277,278,279,280,281,282,285

class4:抽象/接口方法
60,61,64,65,66,69,70,71,72,81,82,93,94,95,212,213,214,215,222,223,293,305,306,400,401,402

class5:deprecated api与replaced api结构相似，参数一致
7,8,31,35(参数具有继承关系),42,43,48,49,121,122,150,165(看不懂系列),185,199,200,201,329,359

class6.1:replaced api调用deprecated api，参数不一致
16,17,19,128,129,313,314,330,331,354,356,360(两个API作用不同),361,363,364,366,405,418

class6.2:replaced api与deprecated api有类似的结构，参数不一致
73,74,75,76,77,78,83,84,85,87,88,176,210,224,262,263,264,265

class6.3:deprecated api调用了replaced api，参数不一致
11,15,23,24,30,32(Rapi的参数就是Dapi对象本身),44,79,127,250,283(Rapi的参数就是Dapi对象本身),296,301,307,310,311,333,334,424

class7:参数和返回值都不同，但语义相同



128，129想个策略
15返回值不同但确实做了同样的事情

面向Deprecated API替换技术的分析与实现

经验研究部分：
1、replaced api调用deprecated api
命名规范问题(统一命名/单词拼写错误)，API统一(多个DAPI的替换是同一个RAPI，通过参数控制调用哪个API，setEnable),参数封装(129,405,418),参数校验(405,418)

2、deprecated api调用replaced api
API设计重复，功能相同(例如父类中已经有相同功能的API，1，10)，取消默认配置的方法(23,DAPI参数少于RAPI)

3、结构相似，调用了相同的API
API设计重复，关闭自定义配置的功能(48,DAPI的参数比RAPI多)

4、没有关联/语义相同
性能，安全隐患等方面的考虑————这种无法从代码中得出结论。返回值上的优化(31,数组->List)

49