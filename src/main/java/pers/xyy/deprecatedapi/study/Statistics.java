package pers.xyy.deprecatedapi.study;

import com.alibaba.fastjson.JSONObject;
import pers.xyy.deprecatedapi.jdk.model.JDKDeprecatedAPI;
import pers.xyy.deprecatedapi.jdk.service.IJDKDeprecatedAPIService;
import pers.xyy.deprecatedapi.jdk.service.impl.JDKDeprecatedAPIService;
import pers.xyy.deprecatedapi.jdk.tools.replace.model.Replace;

import java.util.*;
import java.util.stream.Collectors;

public class Statistics {

    static class Type {
        int feature;
        int replace;// 1.能；2.不能

        public Type(int feature, int replace) {
            this.feature = feature;
            this.replace = replace;
        }

        @Override
        public boolean equals(Object o) {
            if (this == o) return true;
            if (o == null || getClass() != o.getClass()) return false;
            Type type = (Type) o;
            return feature == type.feature &&
                    replace == type.replace;
        }

        @Override
        public int hashCode() {
            return Objects.hash(feature, replace);
        }
    }

    public static void main(String[] args) {
        String str = "185,181,181,185,201,305,306,194,303,305,305,293,293,296,296,11,11,373,373,373,373,370,401,373,373,373,370,376,413,369,370,405,418,403,404,328,362,361,363,365,364,366,367,368,369,370,371,372,373,411,374,375,369,376,377,378,380,380,381,380,386,387,385,382,383,384,388,389,391,392,393,394,393,393,411,412,413,414,374,415,375,379,380,417,330,331,315,316,317,317,318,319,320,321,322,323,374,324,323,374,325,375,326,325,375,407,346,344,355,354,356,358,358,358,358,419,419,420,421,422,419,419,419,419,406,373,368,368,368,368,395,396,397,398,399,287,287,347,348,347,349,350,374,351,350,374,352,375,353,352,375,338,339,374,340,339,374,341,375,342,341,375,373,364,330,331,366,331,381,424,419,335,336,330,313,314,314,313,331,12,361,363,373,366,313,8,42,42,18,364,19,393,1,1,1,313,313,11,11,11,393,393,393,18,364,366,330,313,377,31,31,31,11,11,393,393,330,330,330,11,12,45,393,402,402,402,24,307,307,307,30,26,402,307,402,357,199,330,331,357,313,31,402,393,15,330,370,370,372,15,402,331,330,64,65,66,85,330,330,331,314,314,314,313,314,313,314,330,313,314,314,313,314,330,330,330,331,313,314,330,330,313,270,272,274,270,272,274,277,279,281,277,279,281,270,272,274,277,279,281,270,272,274,277,279,281,223,212,213,223,393,287,270,272,274,277,279,330,330,330,185,287,313,313,313,361,362,362,363,364,365,365,366,401,367,368,369,370,371,372,373,374,375,376,377,378,393,394,411,412,413,401,414,415,417,361,362,362,363,364,365,365,366,367,368,369,370,371,372,373,401,377,393,394,411,412,413,414,415,417,361,362,362,363,364,365,365,366,367,368,369,370,371,372,373,401,401,377,393,394,329,424,413,413,331,330,413,413,331,330,334,424,333,333,313,364,364,313,364,364,402,401,402,402,402,402,402,330,330,330,313,313,313,313,330,330,330,330,313,313,313,313,330,313,401,402,364,330,287,408,408,313,313,313,313,313,313,313,330,330,330,402,330,19,330,313,330,313,313,313,313,313,313,313,313,313,313,313,313,330,313,313,313,313,313,313,330,313,313,313,313,313,313,330,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,330,313,313,313,330,313,313,313,330,313,313,313,313,313,313,313,313,313,313,313,313,330,313,313,313,330,313,313,313,330,313,313,313,330,330,313,313,313,330,313,313,313,330,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,330,313,313,313,313,313,313,313,287,290,287,287,287,199,200,181,181,287,287,303,303,302,303,302,181,181,287,287,287,307,301,301,301,307,301,224,224,224,287,224,224,224,224,224,224,224,224,224,224,224,224,287,270,272,274,277,279,281,270,272,274,277,279,281,270,272,274,270,272,274,277,279,281,277,279,281,210,211,210,211,210,210,330,277,277,277,277,277,277,272,274,269,269,270,272,274,277,279,281,287,270,272,274,270,272,274,28,287,287,287,64,85,313,313,313,313,313,313,287,287,287,313,313,313,313,313,313,313,313,313,287,287,287,287,411,401,16,17,18,413,414,415,417,362,362,364,365,365,19,367,368,369,370,371,372,377,393,394,401,16,17,18,411,413,414,415,417,362,362,364,365,365,19,368,369,370,371,372,377,393,394,411,412,413,401,414,415,417,361,362,362,363,364,365,365,366,367,368,369,370,371,372,373,377,393,394,401,16,17,18,411,412,413,414,415,417,362,362,364,365,365,19,367,368,369,370,371,372,377,393,394,401,16,17,18,411,412,413,414,415,417,362,362,364,365,365,19,367,368,369,370,371,372,377,393,394,393,401,16,17,18,411,413,414,415,417,362,362,364,365,365,19,367,368,369,370,371,372,377,394,393,401,16,17,18,411,413,414,415,417,362,362,364,365,365,19,367,368,369,370,371,372,377,394,393,401,16,17,18,411,413,414,415,417,362,362,364,365,365,19,367,368,369,370,371,372,377,394,393,401,16,17,18,411,413,414,415,417,362,362,364,365,365,19,367,368,369,370,371,372,377,394,393,401,16,17,18,411,413,414,415,417,362,362,364,365,365,19,367,368,369,370,371,372,377,394,393,401,16,17,18,411,413,414,415,417,362,362,364,365,365,19,367,368,369,370,371,372,377,394,393,401,16,17,18,411,413,414,415,417,362,362,364,365,365,19,367,368,369,370,371,372,377,394,393,401,16,17,18,411,413,414,415,417,362,362,364,365,365,19,367,368,369,370,371,372,377,394,393,401,16,17,18,411,413,414,415,417,362,362,364,365,365,19,367,368,369,370,371,372,377,394,393,401,16,17,411,413,414,415,417,362,362,365,365,367,368,369,370,371,372,377,394,393,401,16,17,18,411,413,414,415,417,362,362,364,365,365,19,367,368,369,370,371,372,377,394,393,401,16,17,18,411,413,414,415,417,362,362,364,365,365,19,367,368,369,370,371,372,377,394,393,401,16,17,18,411,413,414,415,417,362,362,364,365,365,19,367,368,369,370,371,372,377,394,393,401,16,17,18,411,413,414,415,417,362,362,364,365,365,19,367,368,369,370,371,372,377,394,393,401,16,17,18,411,413,414,415,417,362,362,364,365,365,19,367,368,369,370,371,372,377,394,393,401,16,17,18,411,413,414,415,417,362,362,364,365,365,19,367,368,369,370,371,372,377,394,393,401,16,17,18,411,413,414,415,417,362,362,364,365,365,19,367,368,369,370,371,372,377,394,393,401,16,17,18,411,413,414,415,417,362,362,364,365,365,19,367,368,369,370,371,372,377,394,393,401,16,17,18,411,413,414,415,417,362,362,364,365,365,19,367,368,369,370,371,372,377,394,393,401,16,17,18,411,413,414,415,417,362,362,364,365,365,19,367,368,369,370,371,372,377,394,393,401,16,17,18,411,413,414,415,417,362,362,364,365,365,19,367,368,369,370,371,372,377,394,393,401,16,17,18,411,413,414,415,417,362,362,364,365,365,19,367,368,369,370,371,372,377,394,393,401,16,17,18,411,413,414,415,417,362,362,364,365,365,19,367,368,369,370,371,372,377,394,393,401,16,17,18,411,413,414,415,417,362,362,364,365,365,19,367,368,369,370,371,372,377,394,393,401,16,17,18,411,413,414,415,417,362,362,364,365,365,19,367,368,369,370,371,372,377,394,393,401,16,17,18,411,413,414,415,417,362,362,364,365,365,19,367,368,369,370,371,372,377,394,393,401,16,17,18,411,413,414,415,417,362,362,364,365,365,19,367,368,369,370,371,372,377,394,393,401,16,17,18,411,413,414,415,417,362,362,364,365,365,19,367,368,369,370,371,372,377,394,393,401,16,17,18,411,413,414,415,417,362,362,364,365,365,19,367,368,369,370,371,372,377,394,393,401,16,17,18,411,413,414,415,417,362,362,364,365,365,19,367,368,369,370,371,372,377,394,393,401,16,17,18,411,413,414,415,417,362,362,364,365,365,19,367,368,369,370,371,372,377,394,393,401,16,17,18,411,413,414,415,417,362,362,364,365,365,19,367,368,369,370,371,372,377,394,393,401,16,17,18,411,413,414,415,417,362,362,364,365,365,19,367,368,369,370,371,372,377,394,393,401,16,17,18,411,413,414,415,417,362,362,364,365,365,19,367,368,369,370,371,372,377,394,393,401,16,17,18,411,413,414,415,417,362,362,364,365,365,19,367,368,369,370,371,372,377,394,393,401,16,17,18,411,413,414,415,417,362,362,364,365,365,19,367,368,369,370,371,372,377,394,393,401,16,17,18,411,413,414,415,417,362,362,364,365,365,19,367,368,369,370,371,372,377,394,393,401,16,17,18,411,413,414,415,417,362,362,364,365,365,19,367,368,369,370,371,372,377,394,393,401,16,17,18,411,413,414,415,417,362,362,364,365,365,19,367,368,369,370,371,372,377,394,393,401,16,17,18,411,413,414,415,417,362,362,364,365,365,19,367,368,369,370,371,372,377,394,393,401,16,17,411,413,414,415,417,362,362,364,365,365,19,367,368,369,370,371,372,377,394,364,19,364,19,31,31,31,31,313,313,313,313,313,313,330,287,330,330,313,330,287,331,330,330,331,330,313,313,313,287,287,287,224,181,181,181,284,284,284,181,185,185,181,181,185,185,185,185,185,185,181,365,365,185,185,185,185,185,287,287,185,185,185,185,185,181,181,287,181,287,287,282,281,47,47,47,287,287";
        List<Integer> ids = Arrays.stream(str.split(",")).map(Integer::parseInt).collect(Collectors.toList());
        Map<Integer, Integer> countMap = new HashMap<>();
        for (Integer id : ids) {
            countMap.put(id, countMap.getOrDefault(id, 0) + 1);
        }
        Map<Type, Integer> map = new HashMap<>();
        IJDKDeprecatedAPIService service = new JDKDeprecatedAPIService();
        for (Integer id : countMap.keySet()) {
            JDKDeprecatedAPI api = service.getById(id);
            int featureType = api.getFeatureType();
            Replace replace = JSONObject.parseObject(api.getReplace(), Replace.class);
            if(replace == null) {
                System.out.println(api.getId());
                continue;
            }
            if (replace.getConfidence() == null)
                System.out.println(api.getId() + " has not confidence");
            int confidence = replace.getConfidence();
            int rp = (confidence == 3 || confidence == 5) ? 1 : 2;
            Type type = new Type(featureType, rp);
            map.put(type, map.getOrDefault(type, 0) + countMap.get(id));
        }

        for(Type type : map.keySet()){
            System.out.println("feature : " + type.feature + ", replace : " + type.replace + ", count : " + map.get(type));
        }

    }

}
